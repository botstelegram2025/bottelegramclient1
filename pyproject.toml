[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "client-management-bot"
version = "1.0.0"
description = "Professional Telegram bot for client management with WhatsApp integration"
authors = [
    {name = "Development Team", email = "dev@example.com"}
]
readme = "README.md"
requires-python = ">=3.8.1"
keywords = ["telegram", "bot", "client-management", "whatsapp", "automation"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: MIT",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Communications :: Chat",
    "Topic :: Office/Business :: Financial",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "python-telegram-bot>=20.0",
    "sqlalchemy>=2.0",
    "psycopg2-binary>=2.9",
    "python-dotenv>=1.0",
    "requests>=2.28",
    "schedule>=1.2",
    "pytz>=2023.3",
    "cryptography>=41.0",
    "qrcode[pil]>=7.4",
    "mercadopago>=2.2",
    "apscheduler>=3.10",
    "flask>=2.3",
    "flask-sqlalchemy>=3.0",
    "pillow>=10.0",
    "psutil>=5.9",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-asyncio>=0.21",
    "pytest-cov>=4.0",
    "pytest-mock>=3.10",
    "black>=23.0",
    "isort>=5.12",
    "flake8>=4.0.1",
    "mypy>=1.0",
    "pre-commit>=3.0",
]

test = [
    "pytest>=7.0",
    "pytest-asyncio>=0.21",
    "pytest-cov>=4.0",
    "pytest-mock>=3.10",
    "coverage>=7.0",
]

monitoring = [
    "prometheus-client>=0.17",
    "grafana-api>=1.0",
]

[project.urls]
Homepage = "https://github.com/example/client-management-bot"
Documentation = "https://client-management-bot.readthedocs.io"
Repository = "https://github.com/example/client-management-bot.git"
"Bug Reports" = "https://github.com/example/client-management-bot/issues"

[project.scripts]
client-bot = "main:main"

[tool.setuptools]
packages = ["core", "services", "handlers", "config"]
include-package-data = true

[tool.setuptools.package-dir]
"" = "."

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=.",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "e2e: marks tests as end-to-end tests",
]

[tool.coverage.run]
source = ["."]
omit = [
    "tests/*",
    "venv/*",
    ".venv/*",
    "*/site-packages/*",
    "setup.py",
    "conftest.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
known_first_party = ["core", "services", "handlers", "utils"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "telegram.*",
    "mercadopago.*",
    "qrcode.*",
    "schedule.*",
    "psutil.*",
]
ignore_missing_imports = true

[tool.flake8]
max-line-length = 88
extend-ignore = [
    "E203",  # whitespace before ':'
    "E501",  # line too long
    "W503",  # line break before binary operator
]
exclude = [
    ".git",
    "__pycache__",
    "docs/source/conf.py",
    "old",
    "build",
    "dist",
    ".venv",
    "venv",
]
per-file-ignores = [
    "__init__.py:F401",
]